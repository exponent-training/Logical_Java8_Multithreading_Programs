package com.Exponent.Day4;

import java.util.Queue;

public class Consumer extends Thread {

	private Queue<Integer> nlist;

	public Consumer(Queue<Integer> numlist) {
		super();
		this.nlist = numlist;
	}

	public void consumeItem() throws InterruptedException {
		synchronized (nlist) {
			while (true) {
				if (nlist.isEmpty()) {
					System.out.println("Wait for the producer to add item");
					nlist.wait();

				} else {
					Thread.sleep(1000);
					System.out.println("Consume item :- " + nlist.remove());
					nlist.notifyAll();
				}
			}
		}

	}

	@Override
	public void run() {
		try {
			consumeItem();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
