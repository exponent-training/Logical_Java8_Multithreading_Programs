package com.Exponent.StreamAPI;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class StreamDay3 {

	public static void main(String[] args) {

//		Object[] a = Arrays.asList(2, 4, 5, 6, 3, 2, 4, 5, 3, 23, 2).stream().filter(n -> n % 2 == 0).toArray();
//		System.out.println(Arrays.toString(a));
//
//		Arrays.asList(2, 4, 5, 6, 3, 2, 4, 5, 3, 23, 2).stream().collect(Collectors.partitioningBy(n -> n % 2 == 0));
//
//		System.out.println(Arrays.asList(2, 4, 5, 6, 3, 2, 4, 5, 3, 23, 2).stream()
//				.collect(Collectors.partitioningBy(n -> n % 2 == 0)));
//
//		String str[] = { "1", "2", "3", "4" };
//		Arrays.asList(str).stream().mapToInt(Integer::parseInt).forEach(System.out::println);

		Arrays.asList(23451, 123, 12345, 2345, 1232213, 1232, 456, 111111, 34234, 1111).stream().map(String::valueOf)
				.filter(n -> n.startsWith("1")).mapToInt(Integer::parseInt).boxed().collect(Collectors.toList())
				.forEach(System.out::println);

		if (Arrays.asList(5, 3, 1).stream().allMatch(n -> n % 2 == 0)) {
			System.out.println("It contains Even Numbers");
		} else {
			System.out.println("it does not contains Even numbers");
		}

	}

}
