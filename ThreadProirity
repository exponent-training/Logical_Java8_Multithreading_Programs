package com.Exponent.Day1;

public class Mythread3 extends Thread {

	@Override
	public void run() {

		/*
		 * for (int i = 0; i <= 10; i++) { System.out.println(i); try {
		 * Thread.sleep(2000); } catch (InterruptedException e) { // TODO Auto-generated
		 * catch block e.printStackTrace(); } }
		 */
//		System.out.println(Thread.currentThread().getName());

	}

	public static void main(String[] args) {
		// main thread - 5

		Thread.currentThread().setPriority(6);
		System.out.println(Thread.currentThread().getPriority());
		Mythread3 m = new Mythread3();
		m.start();
		m.setName("demothread");
		// thread priorities
//		1) min-1 2) max-10 3) normal-5  (1 to 10) -> illegalargumentException

		// child thread - 5

		m.setPriority(10);
		System.out.println(m.getPriority());

		/*
		 * for (int i = 0; i <= 10; i++) { System.out.println(i); try {
		 * Thread.sleep(2000); } catch (InterruptedException e) { // TODO Auto-generated
		 * catch block e.printStackTrace(); } }
		 */
//		System.out.println(Thread.currentThread().getName());
	}
}

--------------------------------------------------------------------------------------------------------------------------------

package com.Exponent.Day1;

public class proritiesThread extends Thread {

	@Override
	public void run() {
		for (int i = 1; i <= 10; i++) {
			System.out.println("Custome thread");
		}
	}

	public static void main(String[] args) {

		// win 11 -> thread proiperty
		proritiesThread pt = new proritiesThread();
		pt.start();
		pt.setPriority(10);
		for (int i = 1; i <= 10; i++) {
			System.out.println("main thread");
		}

	}
}
